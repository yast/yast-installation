/**
 * File:	clients/inst_license.ycp
 * Package:	Installation
 * Summary:	Generic License File
 * Authors:	Anas Nashif <nashif@suse.de>
 *
 * $Id$
 *
 */

{

textdomain "installation";

import "CustomDialogs";
import "Directory";
import "GetInstArgs";
import "Installation";
import "Language";
import "Popup";
import "Stage";
import "Wizard";

include "installation/inst_show_info_txt.ycp";

map display = UI::GetDisplayInfo();
integer space = display["TextMode"]:true ? 1 : 3;

// all the arguments
map argmap = GetInstArgs::argmap();


// Action if license is not accepted
// abort|continue|halt
string action = argmap["action"]:"abort";

string text = "";

if (Stage::initial ())
{
    // linuxrc unzips license files from CD1 /media.1/license.zip
    // to the inst-sys into /var/lib/YaST2/license/license.*.txt
    // for all languages.
    // The fallback (and en_US) is /var/lib/YaST2/license/license.txt
    
    map license_data =
	CustomDialogs::load_file_locale( [ "license.%1.txt",			// pattern (lang for %1)
					   "license.txt"     ],			// fallback pattern
					 Directory::vardir + "/license",	// directory
					 Language::language );			// language

    text = license_data[ "text" ]:"";
}
else
{
    list<string> default_patterns = ["info.txt"];
    string directory = argmap["directory"]:"/var/lib/YaST2";
    if (argmap["directory"]:"" != "")
	directory = Directory::custom_workflow_dir + directory;

    list<string> patterns = argmap["patterns"]:default_patterns;
    map license_data = CustomDialogs::load_file_locale(
	patterns,directory,
	Language::language
    );

    if (license_data["text"]:"" != "" )
        text = license_data["text"]:"";
    else {
	if (SCR::Read(.target.size, "/etc/YaST2/info.txt") > 0 )
	    text = (string)SCR::Read(.target.string, "/etc/YaST2/info.txt" );
    }
}

if (text == "")
    return `auto;

term rt = `Empty();
if (regexpmatch(text, "</.*>")) {
    rt = `RichText(`id( `welcome_text), text);
} else {
    rt = `RichText(`id( `welcome_text), `opt(`plainText), text );
}

// dialog caption
string caption = _("License Agreement");

term contents = `VBox (
        `VSpacing (space),
        `HBox (
            `HSpacing (2*space),
            rt,
            `HSpacing (2*space)
            ),
        `VSpacing (2),
        `RadioButtonGroup(`id(`eula),
            `HBox(
                `HSpacing (2*space),
            `VBox(
                `Left(`RadioButton(`id(`yes),
		    // radio button
		    _("Yes, I Agree to the License Agreement"),
		    Installation::license_accepted)),
                `Left( `RadioButton(`id(`no),
		    // radio button
		    _("No, I Do Not Agree")))
                ),
            `HSpacing (2*space)
                )
            ),
        `VSpacing(2)
        );

// help text
string help = _("<p>Read the license agreement carefully and select
one of the available options. If you do not agree to the license agreement,
the configuration will be aborted.</p>
");

Wizard::SetContents(caption, contents, help,
    GetInstArgs::enable_back(), GetInstArgs::enable_next());
Wizard::SetTitleIcon ("yast-license");

if ( Stage::initial() )
    show_info_txt();	// show /info.txt in a popup (returns immediately if no such file)
     
Wizard::SetFocusToNextButton();

any ret = nil;
boolean halt = false;
while (true)
{
    ret = UI::UserInput();
    symbol accept = (symbol)UI::QueryWidget(`id(`eula), `CurrentButton);
    if (ret == `back)
    {
	break;
    }
    else if (ret == `abort)
    {
	if (Popup::ConfirmAbort (Stage::initial () ? `painless : `incomplete))
	    return `abort;
	continue;
    }

    if (accept == `no)
    {
	// yes-no popup
       if ( Popup::YesNo(_("Reread or reconsider the license agreement?")) )
       {
           continue;
       }
       else
       {
           if (action == "continue")
           {
               ret = `next;
               break;
           }
           else if (action == "halt")
           {
		// timed ok/cancel popup
               if (!Popup::TimedOKCancel(_("System is shutting down..."), 10))
               {
                   continue;
               } else {
                   halt = true;
               }
               break;
           }
           else if (action == "abort")
           {
                ret = `abort;
           }
       }
    }
    else if ( accept != `yes && accept != `no )
    {
	// message popup
        Popup::Message(_("Accept or decline the license agreement."));
        continue;
    }
    else if (accept == `yes && ret == `next)
    {
	Installation::license_accepted = true;
    }
    break;
}

if (halt)
{
    UI::CloseDialog();
    SCR::Execute(.target.bash, "/sbin/halt");
}
return (symbol)ret;

/* EOF */
}
