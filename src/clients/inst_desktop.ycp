/**
 * File:	clients/inst_desktop.ycp
 * Package:	Installation
 * Summary:	Desktop Selection
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * $Id: inst_license.ycp 22829 2005-03-29 10:52:46Z jsrain $
 *
 */

{

textdomain "installation";
import "Wizard";
import "Popup";
import "GetInstArgs";
import "CustomDialogs";
import "Label";


map display = UI::GetDisplayInfo();
integer space = display["TextMode"]:true ? 1 : 3;

// all the arguments
map argmap = GetInstArgs::argmap();

string gnome_blurb = _("GNOME is a powerful graphical desktop environment
and somebody will have to figure out some more text
about this, but not more than three or four lines total.");

string kde_blurb = _("KDE (the K Desktop Environment) is a powerful
graphical desktop environment, and somebody has to
figure out some more text about this, but not more
than three or four lines total.");

term contents = `RadioButtonGroup (`HBox (
    `HWeight(1, `Empty()),	// Distribute excess space 1:2 (left:right)
    `VBox(
	`VWeight (15, `Empty ()),
	`VWeight (30, `VBox (
	    `Left (`RadioButton (`id (`gnome), `opt (`notify, `boldFont),
		// radio button
		_("&GNOME"))),
	    `Left (`HBox (
		`HSpacing (3),
		`Top (`Label (gnome_blurb)),
		`HSpacing (1),
		`Top (`Image ("icons/gnome.png", ""))
	    ))
	)),
	`VWeight (30, `VBox (
	    `Left (`RadioButton (`id (`kde), `opt(`notify, `boldFont),
		// radio button
		_( "&KDE" ) ) ),
	    `Left (`HBox (
		`HSpacing (3),
		`Top (`Label (kde_blurb)),
		`HSpacing (1),
		`Top (`Image ("icons/kde.png", ""))
	    ))
	)),
	`VWeight (30, `VBox (
	    `Left (`RadioButton (`id (`other), `opt(`notify, `boldFont),
		// radio button
		_( "&Other"))),
	    `Left (`HBox (
		`HSpacing (3),
		`PushButton (`id (`select), _("&Select..."))
	    ))
	)),
	`VWeight (25, `Empty())
    ),
    `HWeight (2, `Empty ())
));

term expert_dialog = `VBox (
    `MarginBox(2, 0.7, `Frame (_("Alternate Desktops"),
	`MarginBox (1, 0.5, `RadioButtonGroup (`id (`desktop), `VBox (
	    `Left (`RadioButton (`id (`min_x11),
		_("Minimal &Graphical System"), true)),
	    `Left (`RadioButton (`id (`text),
		_("&Text Mode")))
	))
    ))),
   `Right (`HBox (
	`PushButton ( `id (`ok), Label::OKButton ()),
	`PushButton ( `id (`cancel), Label::CancelButton ())
    ))
);

string help = "FIXME";

Wizard::SetContents (_("Desktop Selection"), contents, help,
    GetInstArgs::enable_back(), GetInstArgs::enable_next());
Wizard::SetFocusToNextButton();
UI::ChangeWidget(`select, `Enabled, false );
//    UI::WizardCommand(`EnableNextButton( false ) );
Wizard::SetTitleIcon( "yast-x11" );

symbol ret = nil;

symbol alt_desktop = `min_x11;

repeat {
    map event = UI::WaitForEvent();
    ret = (symbol)event["ID"]:nil;

    if (event["WidgetClass"]:nil == `RadioButton)
    {
	Wizard::EnableNextButton();
	UI::ChangeWidget (`select, `Enabled,
	    UI::QueryWidget (`other, `Value));
    }
    else if (ret == `select)
    {
	UI::OpenDialog (expert_dialog);
	UI::ChangeWidget (`id (`desktop), `CurrentButton, alt_desktop);
	any popup_ret = UI::UserInput ();
	symbol selected = (symbol)
	    UI::QueryWidget (`id (`desktop), `CurrentButton);
	UI::CloseDialog ();
	if (popup_ret == `ok)
	{
	    alt_desktop = selected;
	}
    }


} until (ret == `back || ret == `next || ret == `cancel || ret == `accept);

Wizard::EnableNextButton ();

if (ret == `accept)
    ret = `next;

return ret;



/* EOF */
}
