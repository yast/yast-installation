{
import "Installation";
import "ImageInstallation";
import "Progress";
import "Wizard";

textdomain "installation";

// There is nothing to do
if (! Installation::image_installation) {
    y2milestone ("No images have been selected");
    return `auto;
}

y2milestone ("Deploying image");

list<string> images = ImageInstallation::ImageOrder ();

integer last_image = nil;

/**
 * Set the progress
 * @param image integer the number of image
 * @param percent integer the percentage of the particular image
 */
void SetProgress (integer image, integer percent) {
    if (percent >= 100)
	image = image + 1;
    if (image != last_image)
    {
	last_image = image;
	if (image < size (images))
	    Progress::Title (sformat (_("Deploying Image \"%1\""), images[image]:""));
    }
    Progress::Step (image);
}

Wizard::SetContents (_("Deploying Installation Images"), `Empty (), "", false, false);
Wizard::SetTitleIcon ("yast-inst-mode");

// FIXME: help (if needed)
Progress::Simple (_("Deploying Installation Images"), _("Deploying Installation Images"), size (images), "help");

ImageInstallation::StoreAllChanges();

Pkg::TargetFinish ();

/*
// FIXME the images usually do not fit in RAMDISK
// move download area to hard disk (for HTTP/FTP media)
// TODO select according to partitioning
string download_dir = "/img_tmp";
download_dir = Installation::destdir + download_dir;
SCR::Execute (.target.bash, sformat ("test -d %1 || mkdir -p %1", download_dir));
Pkg::SourceMoveDownloadArea (download_dir);
// don't know why it didn't work :-(
*/

ImageInstallation::DeployImages (images, Installation::destdir, SetProgress);

//SCR::Execute (.target.bash, sformat ("rmdir %1", download_dir));

y2milestone ("Target image for package selector prepared");

Pkg::TargetInitialize (Installation::destdir);

ImageInstallation::RestoreAllChanges();

return `next;

}
