/**
 * Module: 	inst_uml_options.ycp
 *
 * Authors:	Arvin Schnell <arvin@suse.de>
 *
 * Purpose:	Ask the user for various options for uml.
 */

{
    textdomain "installation";

    import "UML";
    import "Wizard";
    import "Popup";

    // screen title for uml options
    string title = _("UML Options");

    // build and show dialog

    Wizard::OpenAcceptDialog();

    term contents = `HVSquash(
			      `VBox(
				    `Left(`ComboBox(`id(`memory), `opt(`editable),
						    // combobox label
						    _("Memory size:"),
						    ["128", "256", "512", "1024", "2048"])),
				    `Left(`ComboBox(`id(`ncpus), `opt(`editable),
						    // combobxo label
						    _("Number of CPU's:"),
						    ["1", "2", "4"]))
				    )
			      );

    // help text for uml options
    string help_text = _("<p>FIXME</p>
");

    Wizard::SetContents (title, contents, help_text, (boolean) WFM::Args(0),
			 (boolean) WFM::Args(1));

    UI::ChangeWidget (`id(`memory), `Value, tostring (UML::memory_size));
    UI::ChangeWidget (`id(`ncpus), `Value, tostring (UML::number_of_cpus));

    any ret = nil;

    while (true)
    {
	ret = Wizard::UserInput();

	if (ret == `abort && Popup::ConfirmAbort (`painless))
	    break;

	if (ret == `cancel || ret == `back)
	    break;

	if (ret == `next)
	{
	    integer tmp1 = tointeger ((string) UI::QueryWidget (`id(`memory), `Value));
	    integer tmp2 = tointeger ((string) UI::QueryWidget (`id(`ncpus), `Value));

	    if (tmp1 == nil || tmp1 <= 0)
	    {
		// error popup
		string message = _("Invalid amount of memory.");
		Popup::Message (message);
		continue;
	    }

	    if (tmp2 == nil || tmp2 <= 0)
	    {
		// error popup
		string message = _("Invalid number of CPU's.");
		Popup::Message (message);
		continue;
	    }

	    UML::memory_size = tmp1;
	    UML::number_of_cpus = tmp2;
	    break;
	}
    }

    Wizard::CloseDialog ();

    return ret;
}
