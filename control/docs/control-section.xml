<?xml version="1.0" encoding="ISO-8859-1"?>
<section id="product_control">
    <title>Product Installation Control</title>

    <section id="control_functionality">
        <title>Functionality</title>
        <para>
            The product control enables customization of the installation makes it
            possible to enable and disable features during installation in the
            final installed product. It controls the workflow and what is really
            shown to the user during installation.	
        </para>
        <para>
            Beside workflow configuration, other system variables are
            configurable and can be predefined by the system administrator, to name
            a few: the software selection, environment
            settings such as language, time zone and keyboard can be configured and would
            override default variables provided with shipped products.
        </para>
        <para>
            The idea of having a pre-defined installation workflow and pre-defined
            system settings provides a middle ground between manual installation and
            automated installation. 
        </para>
        <para>

            The product configuration file is provided as a text file on the
	    installation media and defines various settings needed during installation.
	    The following is a list of supported configuration options:

        </para>
        <itemizedlist>
            <listitem>
                <para>Workflow</para>
                <para>
                    Replaces the static workflow list with a configurable list
                    using the product configuration file. Entire sections of the workflow
                    can be skipped. 
                </para>
                <para>For example, it is possible to set the language variable in
                    the configuration file if the installation language is to be
                    forced for some reason, eg. if an IT department wants to force
		    French installations, say in Quebec, Canada, then the entire
		    dialogue can be skipped. If the IT department is to recommend some settings but
                    still give the user the choice to change the default settings, the language
                    dialogue will be shown with French preselected.
                </para>
                <para>
                    If none of the above options is used, the default dialogue
                    settings are shown.
                </para>
            </listitem>
            <listitem>
                <para>Proposals</para>
                <para>
                    As with the workflow, proposals are also configurable. For
                    example, certain products would skip some proposals. 
                    In the proposal screen the pre-configured
                    settings can be shown with the possibility to change them or with
                    inactive links if the configuration is to be forced.
                </para>
            </listitem>
            <listitem>
                <para>System Variables</para>
                <para>
                    Let the user define system variables like language, keyboard,
                    time zone, window manager, display manager etc. 
                    The defined variables will be used as defaults in the
                    respective dialogues.
		</para>
            </listitem>
            <listitem>
                <para>Package Selections and additional individual packages</para>
                <para>
                    Define what base package selection and add-on selections should be
                    used for the installation. Additionally provide the possibility to
                    define a list of additional packages. All packages and selections can
                    be selected depending on the architecture using a special
                    architecture attribute in the configuration file.
                </para>

            </listitem>
            <listitem>
                <para>Partitioning</para>
                <para>
                    Integrates flexible partitioning into configuration file,
                    instead of the separate file currently used.
                </para>
            </listitem>
            <listitem>
                <para>Scripting and Hooks</para>
                <para>
                    To customize installation further more, hooks and special slots can
                    be defined where the user can execute scripts. For example, scripts
                    can be executed at the very beginning of the installation (After
                    processing the configuration file), in the installation system before
                    initial boot, in the chroot-ed environment and after
                    initial boot and before/after every step in the
                    workflow. Scripting languages supported during
                    installation are currently Shell, Perl.
                </para>
            </listitem>           
        </itemizedlist>
    </section>
    <section id="implementation">
        <title>Implementation</title>
        <para>
            The control file is implemented in  simple structured XML syntax which so far
            has been used for automated installation . The XML structure used can be
            mapped easily to YaST data structures and all data types available in YaST
            are supported for easy data access and manipulation.
        </para>
        <para>
            The primary use of the control file is to configure the workflow of the
            installation and it offers the possibility to  predefine a certain setup,
            but it also defines product installation  features and other product
            related variables.
        </para>
        <note>      
            <para>
                Note that the control file is not an optional tool to help customize
                installation, it is required during installation and without the file,
                installation may fail or lead to unexpected results. YaST provides a
                default and general control file which is always available in the
                system. The general and product independent control files is installed by
                the package <emphasis>yast2-installation</emphasis> in 
                <filename>/usr/share/YaST2/control/control.xml</filename>.
            </para>
        </note>

        <para>
            During installation, <emphasis>linuxrc</emphasis> searches for the a file
            named <filename>control.xml</filename> on the installation medium (CD,
            NFS, FTP..) and copies the file into the installation system and makes
            the file available to YaST. YaST then starts and looks for the control
            file in 3 location before it starts with the installation workflow:
        </para>
        <itemizedlist>
            <listitem>
                <para><filename>/control.xml</filename></para>
                <para>Usually the file is in top directory after it has been copied by
                    linuxrc and during initial installation phase.</para>
            </listitem>
            <listitem>
                <para><filename>/var/lib/YaST2/control.xml</filename></para>
                <para>After reading the file, and before second installation phase, the
                    control file is copies from the top directory to
                    <filename>/var/lib/YaST2/control.xml</filename> 
                </para>
            </listitem>
            <listitem>
                <para><filename>/usr/share/YaST2/control/control.xml</filename></para>
                <para>This is the location where
                    <emphasis>yast2-installation</emphasis> installs the file in all
                    products. The file is the same on all products.</para>
            </listitem>

        </itemizedlist>
        <para>
            One of the main reasons for using the control is to provide non
            YaST developers the ability to change the installation behavior and
	    customize various settings without the need to change and re-build
	    YaST packages. 
        </para>
        <para>
            The control	files for the various SUSE products are maintained out of the
            YaST development trees and include separate internal and product specific
	    packages. <!-- this is really unclear... -->
        </para>
    </section>

    <section id="control_configuration">
        <title>Configuration</title>
        <section id="control_workflows">
            <title>Workflows</title>

            <para>
                Using the control file, multiple workflows can be defined for
                different modes and installation stages. Thus, the element
                <emphasis>workflows</emphasis> in the control file evaluates to a list
                of workflows.
            </para>
            <para>
                Beside defining what YaST clients should be executed during
                installation, the workflow configuration also let you specify the
                wizard steps and how they should appear during graphical
                installation.
            </para>
            <para>
                A workflow list element is a map with the following elements:
            </para>
            <itemizedlist>
                <listitem>
                    <para>label</para>
                    <para>The label of the workflow as it appears on the left side of the
                        wizard. For example <emphasis>Base Installation</emphasis></para>
                </listitem>
                <listitem>
                    <para>defaults</para>
                    <para>The default arguments to the clients. This is a map element. </para>
                </listitem>
                <listitem>
                    <para>stage</para>
                    <para>This options defines the  stage or phase of installation.. Possible values are
                        <emphasis>initial</emphasis> for the initial stage and
                        <emphasis>continue</emphasis> for the workflow of the installation
                        after reboot </para>
                </listitem>
                <listitem>
                    <para>mode</para>
                    <para>
                        Defines installation mode. Several modes are available, most
                        important modes are:</para>
                    <itemizedlist>
                        <listitem>
                            <para>installation</para>
                        </listitem>
                        <listitem>
                            <para>update</para>
                        </listitem>       
                        <listitem>
                            <para>autoinst</para>
                        </listitem>  

                    </itemizedlist>
                </listitem>
                <listitem>
                    <para>modules</para>
                    <para>
                        This is the actual workflow and is a list of elements
                        describing the order in which the installation should
                        proceed.
                    </para>
                    <para>
                        A module element is a map with the following configuration
                        options:</para>
                    <itemizedlist>
                        <listitem>
                            <para>name: The name of the module. All installation clients and
                                modules have a unified prefix (inst_) which can be ommited
                                here. For example, if the YaST file for the module is called
                                <emphasis>inst_test</emphasis>, then the name in the control
                                file is <emphasis>test</emphasis>
                            </para>
                        </listitem>
                        <listitem>
                            <para>label: The label of the module in the step dialog. This is
                                an optional element. If it is not set, the label of the
                                previous module is used.</para>

                        </listitem>
                        <listitem>
                            <para>arguments: The arguments for the module is a comma separated
                                list which can accept booleans and symbols. </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </itemizedlist>
            <para>The following listing shows a typical installation
                workflow:</para>
            <programlisting>

            <xi:include href="examples/workflow.xml" parse="text"
                xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </programlisting>


        </section>
        <section id="control_proposals">
            <title>Proposals</title>      
            <para>
                Part of the installation workflows are proposal screens, which
                consists of group of related configuration settings. For
                example <emphasis>Network</emphasis>,
                <emphasis>Hardware</emphasis> and the initial
                <emphasis>Installation</emphasis> proposal.
            </para>
            <para>
                If you with for some reason to add or modify a proposal, which
                is discourged because of configuration dependencies, then this
                would be possible using the control file.
            </para>
            <programlisting>

            <xi:include href="examples/proposal.xml" parse="text"
                xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </programlisting>
            <para>
                The proposal in the above listing is displayed in the so called
                <emphasis>continue</emphasis> mode which is the second phase
                of the installation. The proposal consists of different
                configuration options which are controled using a special API.
            </para>
            <para>
                Currently, proposals names and captions as fixed and cant be
                changed. It is not possible to create a special proposal
                screen, instead those available should be used:
                <emphasis>network</emphasis>, <emphasis>hardware</emphasis>,
                <emphasis>service</emphasis>.
            </para>
            <para>
                In the workflow, the proposals are called as any workflow step
                with an additional argument identifying the proposal screen  to be
                started. (<emphasis>`net</emphasis> for network,
                <emphasis>`hw</emphasis> for hardware and
                <emphasis>`service</emphasis> for service proposals. The
                following examples shows how the network proposal is called as
                a workflow step:
            </para>
            <programlisting>
            <xi:include href="examples/callprop.xml" parse="text"
                xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </programlisting>
                
        </section>
        <section id="control_globals">
            <title>Installation and Product Variables</title>
            <para>It is possible to define some installation variables (language,
                timezone, keyboard,.. ) and force them in the proposal. User will still
                be able to change them however.</para>
            <para>The following variables can be set:</para>
            <itemizedlist>
                <listitem>
                    <para>Timezone</para>
                </listitem>
                <listitem>
                    <para>Language</para>
                </listitem>
                <listitem>
                    <para>Keyboard</para>
                </listitem>      
                <listitem>
                    <para>Auto Login (not recommended for multi-user environments and
                        server installations)</para>
                </listitem>     
                <listitem>
                    <para>IO Scheduler</para>
                    <para>Default is <emphasis>as</emphasis>.</para>
                </listitem>
                <listitem>
                    <para>Desktop Scheduler</para>
                </listitem>
            </itemizedlist>
            <para>the following example shows all options above</para>
            <programlisting>
                

            <xi:include href="examples/globals.xml" parse="text"
                xmlns:xi="http://www.w3.org/2001/XInclude"/>

            </programlisting>
	</section>

	<section id="special_globals">
	    <title>Special Installation and Product Variables</title>
	    <para>These options usually enable or disable some installation feature.</para>

	    <itemizedlist>
		<listitem><para>(boolean) <emphasis>enable_firewall</emphasis> - firewall will proposed as
		    either enabled or disabled in the network proposal.</para></listitem>

		<listitem><para>(boolean) <emphasis>enable_clone</emphasis> - clonning feature
		    will be either enabled or disabled.</para></listitem>

		<listitem><para>(boolean) <emphasis>skip_language_dialog</emphasis> - the language
		    dialog might be skipped (if language already selected).</para></listitem>

		<listitem><para>(boolean) <emphasis>show_online_repositories</emphasis> - either shows
		    or hides the "online repositories" feature check-box.</para></listitem>

		<!-- bnc #359115 comment #14 -->
		<listitem><para>(boolean) <emphasis>root_password_as_first_user</emphasis> - automatically
		    selects or deselects the checkbox that makes Users configuration to set the password
		    entered for a first user also for the user root. If not defined, default is
		    <emphasis>false</emphasis></para></listitem>

		<!-- FATE #303396: Make second stage non-interactive -->
		<listitem><para>(boolean) <emphasis>enable_autoconfiguration</emphasis> - enables a check box
		    in dialog that offers to switch the automatic configuration either on or off.
		    Default is false.</para></listitem>

		<listitem><para>(boolean) <emphasis>autoconfiguration_default</emphasis> - defines a default
		    value whether to use the automatic configuration. It works even if
		    <emphasis>enable_autoconfiguration</emphasis> is turned off, but user would not be able
		    to change it. Default is false.</para></listitem>

		<!-- FATE: #304865: Enhance YaST Modules to cooperate better handling the product licenses -->
		<listitem><para>(string) <emphasis>base_product_license_directory</emphasis> - directory
		    where the base-product licenses are stored (license.txt, license.de_DE.txt,
		    ...).</para></listitem>

		<!-- FATE #303798: YaST2 runlevel editor: offer easy enablement and configuration of runlevel 4 -->
		<listitem><para>(boolean) <emphasis>rle_offer_rulevel_4</emphasis> - defines whether
		    runlevel 4 should be offered in Runlevel Editor. Defaul value is <emphasis>false</emphasis>
		    if not set.</para></listitem>

		<!-- FATE #303893: [FSC] default to enabled kdump -->
		<listitem><para>(boolean) <emphasis>enable_kdump</emphasis> - defines whether
		    kdump is proposed as <emphasis>enabled</emphasis> in installation proposal.
		    <emphasis>kdump_proposal</emphasis> client call has to be added into
		    <link linkend="control_proposals">proposal</link> otherwise this variable
		    does not have any effect.</para></listitem>

		<!-- FATE #303875: Introduce a switch regarding 127.0.0.2 entry in /etc/hosts -->
		<listitem><para>(boolean) <emphasis>write_hostname_to_hosts</emphasis> - defines whether
		    the currently assigned hostname is written to /etc/hosts with IPv4 address 127.0.0.2.
		    Defaul value is <emphasis>false</emphasis> if not set.</para></listitem>

		<!-- BNC #431259 -->
		<listitem><para>(boolean) <emphasis>default_ntp_setup</emphasis> - NTP configuration
		    proposes a default ntp server if set to <emphasis>true</emphasis>. Default value
		    is <emphasis>false</emphasis>.</para></listitem>

		<!-- BNC #431158 -->
		<listitem><para>(string) <emphasis>polkit_default_privs</emphasis> - Adjusts
		    <emphasis>/etc/sysconfig/security/POLKIT_DEFAULT_PRIVS</emphasis> to the defined value.
		    If not set or empty, sysconfig is untouched.</para></listitem>
	    </itemizedlist>
	</section>
	    
	<!-- FATE #301937, Save /root content from the installation system to the installed system -->
	<section id="control_globals_save_instsys">
	    <title>Installation helpers</title>

	    <para>In the <emphasis>globals</emphasis> section, there are also
	    helper variables for the installation and debugging:</para>

	    <itemizedlist>
		<listitem>
		    <para><emphasis>save_instsys_content</emphasis> - is a list
		    of entries that should be copied from the installation system
		    to the just installed system before first stage is finished
		    and system reboots to the second stage.</para>

		    <para>This example shows how content of the <emphasis>/root/</emphasis>
		    directory is copied to the <emphasis>/root/inst-sys/</emphasis>
		    directory on the installed system:</para>

		    <programlisting>
		    <xi:include href="examples/globals-save_instsys_content.xml" parse="text"
            		xmlns:xi="http://www.w3.org/2001/XInclude"/>
		    </programlisting>
		</listitem>
	    </itemizedlist>
	</section>

	<!-- FATE #305019: configure the files to copy from a previous installation -->
	<!-- FATE #300421: Import ssh keys from previous installations -->
	<!-- FATE #120103: Import Users From Existing Partition -->
	<section id="control_globals_copy_to_system">
	    <title>Importing Files from Previous Installation</title>

	    <para>Even if users are performing new reinstallation of their system, installation
	    process can backup some files or directories before their disks are formatted and
	    restore them after the installation. For instance, SSH keys are reused.</para>

	    <para>Typically, there is only one system previously installed, if there are more
	    systems, the one with the newest access time to required files is chosen.</para>

	    <para>See the example:</para>
	    <programlisting>
		<xi:include href="examples/globals-copy_to_system.xml" parse="text"
            	    xmlns:xi="http://www.w3.org/2001/XInclude"/>
	    </programlisting>

	    <para>In the <emphasis>globals</emphasis> section, there is a
	    <emphasis>copy_to_system</emphasis> list of <emphasis>copy_to_system_item</emphasis>
	    entries.</para>

	    <para>Every <emphasis>copy_to_system_item</emphasis> entry consists of:</para>

	    <itemizedlist>
		<listitem>
		    <para>(string) <emphasis>copy_to_dir</emphasis> - files are finally
			stored into the mentioned directory, they additionally keep their
			path in the previous filesystem, e.g., file <emphasis>/etc/file</emphasis>
			copied to directory <emphasis>/var/lib/YaST2/</emphasis> will be finally
			stored as <emphasis>/var/lib/YaST2/etc/file</emphasis></para>
		</listitem>
		<listitem>
		    <para>(list) <emphasis>mandatory_files</emphasis> - list of (string)
			<emphasis>file_item</emphasis> entries, one entry for one file or
			directory; these files are mandatory and must all exist on the source
			system; if any of the files are missing, such system is skipped</para>
		</listitem>
		<listitem>
		    <para>(list) <emphasis>optional_files</emphasis> - list of (string)
			<emphasis>file_item</emphasis> entries, one entry for one file or
			directory; files are optional and are copied if they exist; missing
			files are skipped</para>
		</listitem>
	    </itemizedlist>
	</section>

	<!-- FATE #303939: Enable redetection of hardware at customer first boot -->
	<section id="control_globals_automatic_configuration">
	    <title>Automatic Configuration</title>

	    <para>This is another feature defined in <emphasis>globals</emphasis> section.
	    <emphasis>Automatic Configuration</emphasis> is called via the script
	    <emphasis>inst_automatic_configuration</emphasis> at the end of the second stage
	    installation. Having the configuration in control file enables this function for
	    another modes and makes it very well configurable.</para>

	    <para>This is an example of AC setup:</para>
	    <programlisting>
		<xi:include href="examples/globals-automatic_configuration.xml" parse="text"
            	    xmlns:xi="http://www.w3.org/2001/XInclude"/>
	    </programlisting>

	    <para>AC setup <emphasis>automatic_configuration</emphasis> consists of list of several
	    <emphasis>ac_step</emphasis> definitions. On definition for one AC step. These steps
	    can be compared to sets of scripts or sets of installation proposals, e.g.,
	    <emphasis>network proposal</emphasis> that consists of <emphasis>lan</emphasis>,
	    <emphasis>modem</emphasis>, ... and <emphasis>firewall</emphasis> proposals which
	    might depend on each others proposals.</para>

	    <para>Every single <emphasis>ac_step</emphasis> consists of</para>
	    <itemizedlist>
		<listitem>
		    <para><emphasis>text_id</emphasis> - which is the very same ID as used in
		    <link linkend="control_texts">texts</link> (you have to define the AC label
		    there).</para>
		</listitem>
		<listitem>
		    <para><emphasis>type</emphasis> - defines how the AC step items will
		    be handled. Possible values are <emphasis>scripts</emphasis> or
		    <emphasis>proposals</emphasis>. More types cannot be mixed within one AC step.
		    All <emphasis>scripts</emphasis> are called only once one by one,
		    all <emphasis>proposals</emphasis> in one AC step are called first with
		    <emphasis>MakeProposal</emphasis> parameter then again all with
		    <emphasis>Write</emphasis> parameter.</para>
		</listitem>
		<listitem>
		    <para><emphasis>ac_items</emphasis> - is a list of scripts or proposals each in
		    a separate <emphasis>ac_item</emphasis>.</para>

		    <para>For scripts an <emphasis>ac_item</emphasis> is a name
		    of YaST client script without <emphasis>inst_</emphasis> prefix, e.g.,
		    <emphasis>firewall</emphasis> would call <emphasis>inst_firewall</emphasis> script.</para>

		    <para>For proposals an <emphasis>ac_item</emphasis> is a name
		    of YaST proposal without <emphasis>_proposal</emphasis> suffix, e.g.,
		    <emphasis>firewall</emphasis> would call <emphasis>firewall_proposal</emphasis>.</para>
		</listitem>
		<listitem>
		    <para><emphasis>icon</emphasis> - plain icon filename (from 22x22 directory) without suffix
		    and without any explicit directory name, e.g., <emphasis>yast-network</emphasis>.</para>
		</listitem>
	    </itemizedlist>
	</section>

        <section id="control_software">
            <title>Software</title>
<!--
	    FIXME: Obsolete, check and document the current behavior

            <para>
                Using this section in the control file you can change the software
                proposal during installation.
            </para>
            <para>
                By default, the software proposal is generated depending on the available
                space in the system. If enough space is available, a fairly large
                selection of packages and add-on package groups is automatically
                selected. This behavior is controlled by the
                <emphasis>selection_type</emphasis> element in the control file.      
            </para>
            <para>
                The default value for the above element is <emphasis>auto</emphasis>. To
                force a selection which can not be changed by the user, the value
                <emphasis>fixed</emphasis> has to be used.
            </para>
            <para>If a fixed software selection is desired, then the fixed selection
                name has to be specifed in the control file. This selection must be a
                base selection. To specify the name of the base selectiont to be forced,
                use the <emphasis>base_selection</emphasis> element.</para>
            <para>
                The list of base selections can be found on the first CD of the product
                in the directory <filename>suse/setup/descr</filename> or by using the
                following command (The example shows the list of selections for <emphasis>SLES 9</emphasis>):
            </para>
            <para>
                To switch from <emphasis>desktop</emphasis> based proposals to the normal
                behavior of software proposals in YaST , the
                <emphasis>software_proposal</emphasis> element has been
                introduced. Setting the value to <emphasis>desktop</emphasis> will make
                YaST show a dialog with Desktops to select from,
                i.e. <acronym>KDE</acronym> or <emphasis>Gnome</emphasis>. If this
                element is not defined, default behavior is assumed.
            </para>
            <programlisting>

for i in `grep -l baseconf SUSE-SLES-Version-9/CD1/suse/setup/descr/* `; do 
  basename $i .sel; 
done

            </programlisting>
            <para>
                The above will have the following output:
            </para>
            <programlisting>

Full-Installation
Minimal+X11
Minimal
default

            </programlisting>
            <para>
                which matches the base selections in <emphasis>SLES 9</emphasis>.
            </para>
-->
	    <para>In the <emphasis>software</emphasis> section you can define how is the selection
	    of software handled during installation or update.</para>

	    <para>This is a list of supported entries in <emphasis>software</emphasis>:</para>

	    <itemizedlist>

		<listitem id="software_default_desktop">
		    <para><emphasis>default_desktop</emphasis> - defines a desktop selected by
		    default by the installation.</para>
		</listitem>

	    </itemizedlist>

            <para>Additionally, you can configure how updating of packages should be
                performed. The following options are available:</para>
            <itemizedlist>

                <listitem>
                    <para><emphasis>delete_old_packages</emphasis></para>
                    <para>Do not delete old RPMs when updating.</para>
                </listitem>
		
		<!-- FATE #301844 -->
		<listitem>
		    <para><emphasis>delete_old_packages_reverse_list</emphasis></para>
		    <para>Inverts the <emphasis>delete_old_packages</emphasis> rule
		    for products defined as list of regular expressions matching installed
		    product name (SuSE-release).</para>
		    
		    <programlisting>

    &lt;!-- Delete old packages of all products but OES, SLES 9, SLE 10 and SLD 10 --&gt;
    &lt;software&gt;
	&lt;delete_old_packages config:type="boolean"&gt;true&lt;/delete_old_packages&gt;
	&lt;delete_old_packages_reverse_list config:type="list"&gt;
	    &lt;regexp_item&gt;^UnitedLinux .*$&lt;/regexp_item&gt;
	    &lt;regexp_item&gt;^Novell Open Enterprise Server Linux.*&lt;/regexp_item&gt;
	    &lt;regexp_item&gt;^SUSE (LINUX|Linux) Enterprise Server 9$&lt;/regexp_item&gt;
	    &lt;regexp_item&gt;^SUSE (LINUX|Linux) Enterprise Server 9 .*$&lt;/regexp_item&gt;
	    &lt;regexp_item&gt;^SUSE (LINUX|Linux) Enterprise Server 10.*$&lt;/regexp_item&gt;
	    &lt;regexp_item&gt;^SUSE (LINUX|Linux) Enterprise Desktop 10.*$&lt;/regexp_item&gt;
	    &lt;!-- Don't forget to define product itself (Service Pack) --&gt;
	    &lt;regexp_item&gt;^SUSE (LINUX|Linux) Enterprise Server 10 SP.*$&lt;/regexp_item&gt;
	    &lt;regexp_item&gt;^SUSE (LINUX|Linux) Enterprise Desktop 10 SP.*$&lt;/regexp_item&gt;
	&lt;/delete_old_packages_reverse_list&gt;
    &lt;/software&gt;

		    </programlisting>
		</listitem>

                <listitem>
                    <para><emphasis>silently_downgrade_packages</emphasis></para>
                    <para>Allows packager to downgrade installed packages during upgrade
		      workflow.</para>
                </listitem>

		<!-- FATE #301990, bugzilla #238488 -->
		<listitem>
		    <para><emphasis>silently_downgrade_packages_reverse_list</emphasis></para>
		    <para>Inverts the <emphasis>silently_downgrade_packages</emphasis> rule
		    for products defined as list of regular expressions matching installed
		    product name (SuSE-release).</para>
		    
		    <programlisting>

    &lt;!-- For SLES10, packages are not downgraded --&gt;
    &lt;software&gt;
	&lt;silently_downgrade_packages config:type="boolean"&gt;true&lt;/silently_downgrade_packages&gt;
	&lt;silently_downgrade_packages_reverse_list config:type="list"&gt;
	    &lt;regexp_item&gt;^SUSE (LINUX|Linux) Enterprise Server 10.*$&lt;/regexp_item&gt;
	&lt;/silently_downgrade_packages_reverse_list&gt;
    &lt;/software&gt;

		    </programlisting>
		</listitem>

                <listitem>
                    <para><emphasis>only_update_selected</emphasis></para>
                    <para>One can update (only update packages already installed) or
                        upgrade (also install new packages with new functionality). For
                        example, SLES should do "update", not "upgrade" by default</para>
                </listitem>

		<!-- FATE #301844 -->
		<listitem>
		    <para><emphasis>only_update_selected_reverse_list</emphasis></para>
		    <para>Inverts the <emphasis>only_update_selected</emphasis>
		    for products defined as list of regular expressions matching installed
		    product name (SuSE-release).</para>

		    <programlisting>

    &lt;!--
	Only update packages but install new packages
	when upgrading any SUSE Linux or openSUSE
    --&gt;
    &lt;software&gt;
	&lt;only_update_selected config:type="boolean"&gt;true&lt;/only_update_selected&gt;
	&lt;only_update_selected_reverse_list config:type="list"&gt;
	    &lt;regexp_item&gt;^SUSE Linux [0-9].*&lt;/regexp_item&gt;
	    &lt;regexp_item&gt;^openSUSE [0-9].*&lt;/regexp_item&gt;
	&lt;/only_update_selected_reverse_list&gt;
    &lt;/software&gt;

		    </programlisting>
		</listitem>

	    </itemizedlist>

	    <para>The other option defines how product upgrading in general is defined.</para>

	    <itemizedlist>
		<!-- FATE #301844 -->
		<listitem>
		    <para><emphasis>products_supported_for_upgrade</emphasis></para>
		    <para>List of known products supported for upgrade (SuSE-release).
		    Old releases or other distributions will report warning.</para>
		    
		    <programlisting>
    &lt;software&gt;
	&lt;products_supported_for_upgrade config:type="list"&gt;
	    &lt;regexp_item&gt;^Novell LINUX Desktop 9.*&lt;/regexp_item&gt;
	    &lt;regexp_item&gt;^SUSE LINUX Enterprise Server 10.*&lt;/regexp_item&gt;
	    &lt;regexp_item&gt;^SUSE LINUX Enterprise Desktop 10.*&lt;/regexp_item&gt;
	    &lt;regexp_item&gt;^openSUSE .*&lt;/regexp_item&gt;
	&lt;/products_supported_for_upgrade&gt;
    &lt;/software&gt;
		    </programlisting>
		</listitem>
            </itemizedlist>
	    
	    <para>All products (regular expressions) are matching the string which
	    can be found in <emphasis>/etc/*-release</emphasis> file.</para>

	    <para>Regular expressions in &lt;regexp_item&gt;s can contain standard regular
	    expressions, such as</para>

	    <itemizedlist>
		<listitem><para>The circumflex <emphasis>^</emphasis> and
		  the dollar sign <emphasis>$</emphasis> as boundary characters
		  for strings</para></listitem>
		<listitem><para>asterisk <emphasis>*</emphasis>, plus <emphasis>+</emphasis>
		  and question mark <emphasis>?</emphasis> for repeating
		  or existency</para></listitem>
		<listitem><para>dot <emphasis>.</emphasis> for wild-card
		  character</para></listitem>
		<listitem><para>square brackets <emphasis>[]</emphasis> for list of
		  possible characters</para></listitem>
		<listitem><para>circle brackets <emphasis>()</emphasis> for listing
		  possibilities</para></listitem>
		<listitem><para>special all-locale class-expressions
		  <emphasis>[:alnum:]</emphasis>,
		  <emphasis>[:alpha:]</emphasis>,
		  <emphasis>[:blank:]</emphasis>,
		  <emphasis>[:cntrl:]</emphasis>,
		  <emphasis>[:digit:]</emphasis>,
		  <emphasis>[:graph:]</emphasis>,
		  <emphasis>[:lower:]</emphasis>,
		  <emphasis>[:print:]</emphasis>,
		  <emphasis>[:punct:]</emphasis>,
		  <emphasis>[:space:]</emphasis>,
		  <emphasis>[:upper:]</emphasis>,
		  <emphasis>[:xdigit:]</emphasis></para></listitem>
	    </itemizedlist>
	    
	    <para>These regular expressions are evaluated as <emphasis>YCP</emphasis>.</para>

	    <itemizedlist>
                <listitem>
                    <para><emphasis>online_repos_preselected</emphasis></para>
                    <para>Online Repositories are pre-selected by default to be used.
		    This item can change the default behavior.</para>
                </listitem>
	    </itemizedlist>

        </section>

	<section id="control_software_supported_desktops">
	    <title>Supported Desktops</title>

	    <!-- BNC #427061 -->
	    <para>This part defines not only all the desktops for Desktop Selection dialog
	    during installation but also the <link linkend="software_default_desktop">default_desktop</link>
	    must be defined</para>

	    <para>Example of supported desktops:</para>
	    <programlisting>

	    <xi:include href="examples/supported_desktops.xml" parse="text"
		xmlns:xi="http://www.w3.org/2001/XInclude"/>
	    </programlisting>

	    <para>Section <emphasis>supported_desktops</emphasis> contains list of
	    one or more <emphasis>one_supported_desktop</emphasis> sections.</para>

	    <itemizedlist>
		<title>Keys sypported in one_supported_desktop</title>

		<listitem>
		    <para>(string) <emphasis>name</emphasis></para>
		    <para>Unique ID.</para>
		</listitem>

		<listitem>
		    <para>(string) <emphasis>desktop</emphasis></para>
		    <para>Desktop to start (gnome, startkde4, startkde3, startxfce4, ...).</para>
		</listitem>

		<listitem>
		    <para>(string) <emphasis>label_id</emphasis></para>
		    <para>Text ID used for desktop selection label.</para>
		</listitem>

		<listitem>
		    <para>(string) <emphasis>logon</emphasis></para>
		    <para>Logon manager to start (gdm, kdm4, kdm3, xdm, ...).</para>
		</listitem>

		<listitem>
		    <para>(string) <emphasis>cursor</emphasis></para>
		    <para>Cursor theme.</para>
		</listitem>

		<listitem>
		    <para>(string) <emphasis>packages</emphasis></para>
		    <para>(whitespace-separated).</para>
		</listitem>

		<listitem>
		    <para>(integer) <emphasis>order</emphasis></para>
		    <para>Numeric order or the desktop in Desktop Selection dialog.
		    Number <emphasis>1</emphasis> is reserved for major desktops
		    that are displayed with description (<emphasis>description_id</emphasis>
		    is required). If the very same <emphasis>order</emphasis> is used
		    for more than one desktops, they are sorted alphabetically.</para>
		</listitem>

		<listitem>
		    <para>(string) <emphasis>patterns</emphasis></para>
		    <para>Patterns to select for the desktop (whitespace-separated).</para>
		</listitem>

		<listitem>
		    <para>(string) <emphasis>icon</emphasis></para>
		    <para>Icon used in Desktop Selection dialog, just a name of an icon from
		    $current_theme/icons/64x64/apps/ directory, without <emphasis>.png</emphasis>
		    suffix.</para>
		</listitem>

		<listitem>
		    <para>(string) <emphasis>description_id</emphasis></para>
		    <para>Text ID used for desktop selection label.</para>
		</listitem>

	    </itemizedlist>
	</section>

	<section id="control_software_scenarios">
	    <title>System Scenarios</title>

	    <para>System scenarios contain definition of dialog <emphasis>inst_scenarios</emphasis>
	    in the first stage installation. It offeres several base-scenarios but only one of them
	    can be selected as the selected one.</para>

	    <para>Example of configured scenarios:</para>
            <programlisting>

            <xi:include href="examples/software_scenarios.xml" parse="text"
                xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </programlisting>

	    <para>System scenarios are defined inside the <emphasis>software</emphasis> section.
	    Section <emphasis>system_scenarios</emphasis> consists of several
	    <emphasis>system_scenario</emphasis> definitions. Every single
	    <emphasis>system_scenario</emphasis> consists of:</para>

	    <itemizedlist>
		<listitem><para><emphasis>id</emphasis> - unique identificator of
		    a selection.</para></listitem>
		<listitem><para><emphasis>patterns</emphasis> - space-separated list of patterns
		    covering the software scenario.</para></listitem>
		<listitem><para><emphasis>icon</emphasis> - plain icon filename (from 32x32 theme
		    directory) without suffix.</para></listitem>
	    </itemizedlist>

	    <para>Selection labels must be defined in <link linkend="control_texts">texts</link> section.
	    Scenarios <emphasis>id</emphasis>s are used as link identificators.</para>

	    <programlisting>

    &lt;software&gt;
	&lt;system_scenario&gt;
	    &lt;id&gt;<emphasis>scenario_id</emphasis>&lt;/id&gt;
	&lt;/system_scenario&gt;
    &lt;/software&gt;

    &lt;texts&gt;
	&lt;<emphasis>scenario_id</emphasis>&gt;&lt;label&gt;Some Label&lt;/label&gt;&lt;/<emphasis>scenario_id</emphasis>&gt;
    &lt;/texts&gt;

	    </programlisting>

	    <para>Section <emphasis>software</emphasis> also contains optional
	    <emphasis>default_system_scenario</emphasis> that defines id of the default scenario.</para>

	    <para>There are some important texts that has to be defined for the dialog layout</para>

	    <itemizedlist>
		<listitem><para><emphasis>scenarios_caption</emphasis> - used as a dialog caption
		    for the Scenarios dialog.</para></listitem>
		<listitem><para><emphasis>scenarios_text</emphasis> - used as an informative text
		    describing the available selections below.</para></listitem>
	    </itemizedlist>

	</section>

        <section id="control_partitioning">
            <title>Partitioning</title>
            <para>
                If present, the partition proposal will be based on the data
                provided in the control file.
            </para>
            <section id="control_partitioning_algorithm">
                <title>Algorithm for space allocation</title>

                <para>
                    Space allocation on a disk happens in the following order.
                    First all partition get the size allocated that is determined by the
                    size parameter of the partition description. If a disk cannot hold the
                    sum of these sizes this disk is not considered for installation.
                    If all demands by the size parameter are fulfilled and there is still 
                    space available on the disk, the partitions which have a parameter "percent"
                    specified are increased until the size demanded by by "percent" is fulfilled.
                    If there is still available space on the disk (this normally only can 
                    happen if the sum of all percent values are below 100), all partitions that 
                    are specified with a size of zero are enlarged as far as possible. If a
                    "maxsize" is specified for a partition, all enlargement are only done up 
                    to the specified maxsize.
                </para>

                <para>
                    If more than one of the available disks is eligible to hold a certain
                    partition set, the disk is selected as follows. If there is a partition
                    allocated on that disk that has its size specified by keywords "percent"
                    or by "size=0" and does not have a "maxsize" value set then the desired
                    size for this partition is considered to be unlimited. If a partition
                    group contains a partition which an unlimited desired size, the disk
                    that maximizes the partition size for the unlimited partitions is
                    selected. If all partitions in a partition group are limited in size
                    then the smallest disk that can hold the desired sizes of all partitions
                    is selected for that partition group.
                </para>

                <para>
                    If there are multiple partition groups the the partition group with
                    the lowest number (means highest priority) get assigned its disk first.
                    Afterward the partition group with the next priority gets assigned a 
                    the optimal disk from the so far unassigned disks.
                </para>

            </section>
            <section id="control_partitioning_options">
                <title>Configuration Options</title>

                <para>
                    The following elements are global to all disks and
                    partitions:
                </para>

                <variablelist><title>prefer_remove</title>
                    <varlistentry>
                        <term>Possible values</term>
                        <listitem>
                            <para>
                                true|false
                            </para>
                        </listitem>
                    </varlistentry>

                    <varlistentry>
                        <term>Default value</term>
                        <listitem>
                            <para>
                                true
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                If set to false the partition suggestion tries to use gaps on the 
                                disks or to re-use existing partitions.
                                If set to true then the partition suggestion prefers removal of
                                existing partitions.
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>


                <variablelist><title>remove_special_partitions</title>
                    <varlistentry>
                        <term>Possible values</term>
                        <listitem>
                            <para>
                                true|false
                            </para>
                        </listitem>
                    </varlistentry>

                    <varlistentry>
                        <term>Default value</term>
                        <listitem>
                            <para>
                                false
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                If set to false YaST2 will not remove some special partitions (e.g. 0x12
                                Compaq diagnostics, 0xde Dell Utility) if they exists on the disk
                                even if prefer_remove is set to true.
                                If set to true YaST2 will remove even those special partitions. 
                                <caution>
                                    <para>Caution: Since some machines are not even bootable any more when these 
                                        partitions are removed one should really know what he does when 
                                        setting this to true  </para>
                                </caution>         
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>

                <variablelist><title>keep_partition_fsys</title>
                    <varlistentry>
                        <term>Possible values</term>
                        <listitem>
                            <para>
                                comma separated list of 
                                reiser, xfs, fat, vfat, ext2, ext3, jfs, ntfs, swap
                            </para>
                        </listitem>
                    </varlistentry>

                    <varlistentry>
                        <term>Default value</term>
                        <listitem>
                            <para>
                                Empty list
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                Partitions that contain filesystems in that list are not deleted even
                                if prefer_remove  is set to true.
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>


                <variablelist><title>keep_partition_id</title>
                    <varlistentry>
                        <term>Possible values</term>
                        <listitem>
                            <para>
                                comma separated list of possible partition ids
                            </para>
                        </listitem>
                    </varlistentry>

                    <varlistentry>
                        <term>Default value</term>
                        <listitem>
                            <para>
                                Empty list
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                Partitions that have a partition id that is contained in the list are
                                not deleted even if prefer_remove  is set to true.

                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>

                <variablelist><title>keep_partition_num</title>
                    <varlistentry>
                        <term>Possible values</term>
                        <listitem>
                            <para>
                                comma separated list of possible partition numbers
                            </para>
                        </listitem>
                    </varlistentry>

                    <varlistentry>
                        <term>Default value</term>
                        <listitem>
                            <para>
                                Empty list
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                Partitions that have a partition number that is contained in the list are
                                not deleted even if prefer_remove  is set to true.

                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>

                <para>
                    To configure individual partitions and disks, a list element is
                    used with its items describing how should the partitions be created and
                    configured
                </para>

                <para>
                    The attributes of such a partition
                    are determined by several elements. These elements are described in more detail later.
                </para>
                <note>
                    <title>General remarks to all option values</title>
                    <para>
                        If there is a blank or a equal 
                        sign (=) contained in an option value, the values has to be surrounded 
                        by double quotes ("). Values that describe sizes can be followed by the 
                        letters K, M, G. (K means Kilobytes, M Megabytes and G Gigabytes).
                    </para>
                </note>
                <variablelist>
                    <title>mount</title>
                    <varlistentry>
                        <term>Example</term>
                        <listitem>
                            <para>
                                &lt;mount&gt;swap&lt;/mount&gt;
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                This entry describes the mount point of the partition. For a swap
                                partition the special value "swap" has to be used.
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>
                <variablelist>
                    <title>fsys</title>
                    <varlistentry>
                        <term>Example</term>
                        <listitem>
                            <para>
                                &lt;fsys&gt;reiser&lt;/fsys&gt;
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                This entry describes the filesystem type created on this partition.
                                Possible Filesystem types are: reiser, ext2, ext3, xfs, vfat, jfs, swap
                                If no filesystem type is given for a partition, reiserfs is used.
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>
                <variablelist>
                    <title>formatopt</title>
                    <varlistentry>
                        <term>Example</term>
                        <listitem>
                            <para>
                                &lt;formatopt&gt;reiser&lt;formatopt&gt;
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                This entry describes the options given to the format command. Multiple
                                options have to be separated by blanks. There must not be a blank between
                                option letter and option value. This entry is optional.
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>

                <variablelist>
                    <title>fstopt</title>
                    <varlistentry>
                        <term>Example</term>
                        <listitem>
                            <para>
                                &lt;fstopt&gt;acl,user_xattr&lt;fstopt&gt;
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                This entry describes the options written to <filename>/etc/fstab</filename>. Multiple
                                options have to be separated by comma. This entry is optional.
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>

                <variablelist>
                    <title>label</title>
                    <varlistentry>
                        <term>Example</term>
                        <listitem>
                            <para>
                                &lt;label&gt;emil&lt;label&gt;
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                If the filesystem can have a label, the value of the label is set 
                                to this value.
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>

                <variablelist>
                    <title>id</title>
                    <varlistentry>
                        <term>Example</term>
                        <listitem>
                            <para>
                                &lt;id&gt;0x8E&lt;id&gt;
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                This keyword makes it possible to create partitions with partition
                                ide other than 0x83 (for normal filesystem partitions) or 0x82 (for
                                swap partitions). This make it possible to create LVM or MD partitions 
                                on a disk. 
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>


                <variablelist>
                    <title>size</title>
                    <varlistentry>
                        <term>Example</term>
                        <listitem>
                            <para>
                                &lt;size&gt;2G&lt;size&gt;
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                This keyword determines the size that is at least needed for a 
                                partition. A size value of zero means that YaST2 should try to make
                                the partition as large as possible after all other demands regarding 
                                partition size are fulfilled. The special value of "auto" can be
                                given for the <filename>/boot</filename> and swap partition. If auto is set for a /boot or
                                swap partition YaST2 computes a suitable partition size by itself.
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>

                <variablelist>
                    <title>percent</title>
                    <varlistentry>
                        <term>Example</term>
                        <listitem>
                            <para>
                                &lt;percent&gt;30&lt;percent&gt;
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>
                                This keyword determines that a partition should be allocated a certain
                                percentage of the available space for installation on a disk. 
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>

                <variablelist>
                    <title>maxsize</title>
                    <varlistentry>
                        <term>Example</term>
                        <listitem>
                            <para>
                                &lt;maxsize&gt;4G&lt;maxsize&gt;
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>        
                                This keyword limits the maximal amount of space that is allocated
                                to a certain partition. This keyword is only useful in conjunction
                                with a size specification by keyword "percent" or by an entry of
                                "size=0".

                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>

                <variablelist>
                    <title>increasable</title>
                    <varlistentry>
                        <term>Example</term>
                        <listitem>
                            <para>
                                &lt;increasable config:type="boolean"&gt;true&lt;increasable&gt;
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Default</term>
                        <listitem>
                            <para>        
                                false
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>        
                                After determining the optimal disk usage the partition may be 
                                increased if there is unallocated space in the same gap available.
                                If this keyword is set, the partition may grow larger than specified
                                by the maxsize and percent parameter. This keyword is intended to
                                avoid having unallocated space on a disk after partitioning if
                                possible.

                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>

                <variablelist>
                    <title>disk</title>
                    <varlistentry>
                        <term>Example</term>
                        <listitem>
                            <para>
                                &lt;disk&gt;2&lt;disk&gt;
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>Description</term>
                        <listitem>
                            <para>        
                                This keyword specifies which partitions should be placed on which
                                disks if multiple disks are present in the system. All partitions with
                                the same disk value will be placed on the same disk. The value after
                                the keyword determines the priority of the partition group. Lower 
                                numbers mean higher priority. If there are not enough disks in the 
                                system a partition group with lower priority is assigned a separate 
                                disks before a partition group with higher priority. A partition 
                                without disk keyword is implicitly assigned the highest priority 0.          

                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>

                <example id="flexible_partitioning_example">
                    <title>Flexible Partitioning</title>
                    <para>If in the example below the machine has three disks then each of the
                        partition groups gets on a separate disk. So one disk will hold
                        <filename>/var</filename>, another disk will hold
                        /home<filename/> 
                        and another disk will hold
                        <filename>/</filename>, <filename>/usr</filename> and<filename> /opt</filename>. 
                        If in the above example the machine has only two disks then <filename>/home</filename>
                        will still be on a separate disk (since it has lower priority than
                        the other partition groups) and <filename>/</filename>,
                        <filename>/usr</filename>, 
                        <filename>/opt</filename> and <filename>/var</filename> will share the other disk.
                    </para>
                    <para>
                        If there is only one disk in the system of course all partitions
                        will be on that disk. To make the flexible partitioning possible,
                        <emphasis>use_flexible_partitioning</emphasis> option must be se to
                        <emphasis>true</emphasis> and <emphasis>partitions</emphasis>
                        must be surrounded with <emphasis>flexible_partitioning</emphasis> tag.
                    </para>
                    <programlisting><xi:include href="examples/partitions.xml" parse="text"
                        xmlns:xi="http://www.w3.org/2001/XInclude"/>
                    </programlisting>

                </example>

                <para>A more complete example with other options is shown below:</para>
                <programlisting><xi:include href="examples/partitions2.xml" parse="text"
                    xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </programlisting>



            </section>

        </section>
        <section id="control_hooks">
            <title>Hooks</title>
            <para>
                It is possible to add hooks before and after any workflow step
                for further customization of the installed system and to to perform
                non-standard tasks during installation.
            </para>
            <para>Two additional elements define custom script hooks:</para>
            <itemizedlist>
                <listitem>
                    <para>prescript: Executed before the module is called.</para>
                </listitem>
                <listitem>
                    <para>postscript: Executed after the module is called.</para>
                </listitem>
            </itemizedlist>
            <para>
                Both script types accept two elements, the interpreter used (shell or
                perl) and the source of the scripts which is embedded in the XML file
                using CDATA sections to avoid confusion with the XML syntax. The
                following example shows how scripts can be embedded in the control file:
            </para>

            <programlisting>
                
            <xi:include href="examples/scripts.xml" parse="text"
                xmlns:xi="http://www.w3.org/2001/XInclude"/>

            </programlisting>

        </section>

	<section id="control_texts">
	    <title>Texts</title>

	    <para>Some kind of texts can be, of course, placed in several parts of the control
	    file but they wouldn't be translated. This control file section makes it possible to
	    mark some texts for translation.</para>

	    <para>The structure is rather easy:</para>

	    <programlisting>
        	<xi:include href="examples/texts.xml" parse="text"
        	    xmlns:xi="http://www.w3.org/2001/XInclude"/>
	    </programlisting>

	    <para>Translated texts can be got using
	    <emphasis>ProductControl::GetTranslatedText (text_id)</emphasis> call.</para>
	</section>
    </section>
</section>
