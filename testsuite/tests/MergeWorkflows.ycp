{

// testedfiles: AddOnProduct.ycp

include "testsuite.ycp";

map READ = $[
    "target" : $[
	"size" : 0,
    ],
];

map WRITE = $[];

map EXEC = $[
    "target" : $[
	"bash_output" : $["exit" : 0, "stdout" : "", "stderr" : ""],
    ],
];

TESTSUITE_INIT([READ, WRITE, EXEC], nil);

import "AddOnProduct";
import "ProductControl";

list<map> wf1 = [
  $[
    "defaults":$["archs":"i386"],
    "label":"Preparation",
    "mode":"installation",
    "modules":[
      $["arguments":$["first_run":"yes"], "enable_back":"no", "enable_next":"yes", "label":"Language", "name":"language", "retranslate":true],
      $["label":"Perform Installation", "name":"perform"],
      $["label":"Finish Installation", "name":"finish"],
    ],
    "stage":"initial"
  ]
];

map merge1 = $[
  "append_modules":[
    $["heading":"yes", "label":"OES configuration"],
    $["label":"Perform Installation", "name":"a1_netsetup"],
    $["label":"Perform Installation", "name":"a2_netprobe"]
  ],
  "mode":"installation",
  "stage":"initial",
  "defaults":$["archs":"all", "enable_back":"no", "enable_next":"no"],
  "insert_modules":[$[
    "before":"perform",
    "modules":[$["label":"Perform Installation", "name":"i1_netprobe"]]
  ]],
  "remove_modules":["finish"],
  "replace_modules":[
    $["modules":[$["label":"Perform Installation", "name":"r1_language"]], "replace":"language"]
  ],
];

ProductControl::workflows = wf1;

TEST(``(AddOnProduct::UpdateWorkflows([merge1], "product name", "textdomain")), [], nil);

DUMP(ProductControl::workflows);

DUMP("======================================================");
/*
merge1["archs"] = "i386";

ProductControl::proposals = [ prop1 ];

TEST(``(AddOnProduct::UpdateProposals([merge1], "product name", "textdomain")), [], nil);

DUMP(ProductControl::proposals);

DUMP("======================================================");


map prop2 = $["archs":"", "mode":"", "name":"network", "proposal_modules":[$["name":"lan", "presentation_order":"20"], $["name":"dsl", "presentation_order":"30"], $["name":"isdn", "presentation_order":"40"], $["name":"modem", "presentation_order":"50"], $["name":"remote", "presentation_order":"60"], $["name":"firewall", "presentation_order":"10"], $["name":"proxy", "presentation_order":"70"]], "stage":"continue"];

map merge2 = $[
    "archs" : "",
    "mode":"",
    "name":"network",
    "stage":"continue",
    "append_modules":["module_1", "module_2"],
    "remove_modules":["firewall", "proxy"],
    "replace_modules":[
	$[
	    "modules":["network_manager"],
	    "replace":"lan"
	]
    ]
];

ProductControl::proposals = [ prop2 ];

TEST(``(AddOnProduct::UpdateProposals([merge2], "product name", "textdomain")), [], nil);

DUMP(ProductControl::proposals);
*/
}
