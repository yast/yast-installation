/**
 * Module:		proposal_dummy.ycp
 *
 * $Id$
 *
 * Author:		Stefan Hundhammer <sh@suse.de>
 *
 * Purpose:		Proposal function dispatcher - dummy version.
 *			Use this as a template for other proposal dispatchers.
 *			Don't forget to replace all fixed values with real values!
 *
 *			See also file proposal-API.txt for details.
 */
{
    textdomain "installation";

    string func  = WFM::Args(0);
    map    param = WFM::Args(1);
    map    ret   = $[];

    if ( func == "MakeProposal" )
    {
	boolean force_reset      = param["force_reset"     ]:false;
	boolean language_changed = param["language_changed"]:false;

	// call some function that makes a proposal here:
	//
	// DummyMod::MakeProposal( force_reset );

	// Fill return map

	ret =
	    $[
	      "raw_proposal" :  [
				 "proposal item #1",
				 "proposal item #2",
				 "proposal item #3"
				],
	      "warning"		: "This is just a dummy proposal!",
	      "warning_level"	: `blocker
	    ];
    }
    else if ( func == "AskUser" )
    {
	boolean has_next = param["has_next"]:false;

	// call some function that displays a user dialog
	// or a sequence of dialogs here:
	//
	// sequence = DummyMod::AskUser( has_next );


	// Fill return map

	ret =
	    $[
	      "workflow_sequence":	`next
	    ];
    }
    else if ( func == "Description" )
    {
	// Fill return map.
	//
	// Static values do just nicely here, no need to call a function.

	ret =
	    $[
	      // this is a heading
	      "rich_text_title"	:	_( "Dummy"  ),
	      // this is a menu entry
	      "menu_title"	:	_( "&Dummy" ),
	      "id"		:	"dummy_stuff"
	    ];
    }
    else if ( func == "Write" )
    {
	// Fill return map.
	//

	ret =
	    $[
	      "success" : true
	    ];
    }

    return ret;
}
